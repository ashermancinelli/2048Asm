Microsoft (R) Macro Assembler Version 14.11.25547.0	    11/19/17 21:41:33
-Add and Subtract              (AddSubAlt.asm		     Page 1 - 1


				TITLE Add and Subtract              (AddSubAlt.asm)

				; This program adds and subtracts 32-bit integers.
				INCLUDE Irvine32.inc
			      C ; Include file for Irvine32.lib             (Irvine32.inc)
			      C 
			      C ;OPTION CASEMAP:NONE		; optional: make identifiers case-sensitive
			      C 
			      C INCLUDE SmallWin.inc		; MS-Windows prototypes, structures, and constants
			      C .NOLIST
			      C .LIST
			      C 
			      C INCLUDE VirtualKeys.inc
			      C ; VirtualKeys.inc
			      C .NOLIST
			      C .LIST
			      C 
			      C 
			      C .NOLIST
			      C .LIST
			      C 

 00000000			.data

					; These coordinates are measured from 
 00000000 12				playerPosX	BYTE 	18
 00000001 0B				playerPosY	BYTE 	11
 00000002  000001A0 [			currentRoom BYTE	416 dup(?)
	    00
	   ]
 000001A2 00				deltax		SBYTE	0
 000001A3 00				deltay		SBYTE	0

 000001A4 7C 2D 2D 2D 2D		startRoom	BYTE	"|-----------------------------|",0ah
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   7C 0A
 000001C4  7C 20 20 20 20					BYTE	"|                             |",0ah
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   7C 0A
 000001E4  7C 20 20 20 20					BYTE	"|                             |",0ah
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   7C 0A
 00000204  7C 20 20 20 20					BYTE	"|                             |",0ah
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   7C 0A
 00000224  7C 20 20 20 20					BYTE	"|                             |",0ah
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   7C 0A
 00000244  7C 20 20 20 20					BYTE	"|                             |",0ah
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   7C 0A
 00000264  7C 20 20 20 20					BYTE	"|                             |",0ah
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   7C 0A
 00000284  7C 20 20 20 20					BYTE	"|                             |",0ah
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   7C 0A
 000002A4  7C 20 20 20 20					BYTE	"|                             |",0ah
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   7C 0A
 000002C4  7C 20 20 20 20					BYTE	"|                             |",0ah
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   7C 0A
 000002E4  7C 20 20 20 20					BYTE	"|                             |",0ah
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   7C 0A
 00000304  7C 20 20 20 20					BYTE	"|                 O           |",0ah
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 4F 20
	   20 20 20 20 20
	   20 20 20 20 20
	   7C 0A
 00000324  7C 2D 2D 2D 2D					BYTE	"|-----------------------------|",0h
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   7C 00


 00000344 7C 2D 2D 2D 2D		room2		BYTE	"|-----------------------------|",0ah
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   7C 0A
 00000364  5C 20 20 20 20					BYTE	"\                             |",0ah
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   7C 0A
 00000384  20 5C 20 20 20					BYTE	" \                            |",0ah
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   7C 0A
 000003A4  20 20 5C 20 20					BYTE	"  \                           |",0ah
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   7C 0A
 000003C4  20 20 20 5C 20					BYTE	"   \                          |",0ah
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   7C 0A
 000003E4  20 20 20 20 5C					BYTE	"    \                         |",0ah
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   7C 0A
 00000404  20 5F 5F 5F 5F					BYTE	" ____\                        |",0ah
	   5C 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   7C 0A
 00000424  7C 20 20 20 20					BYTE	"|                             |",0ah
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   7C 0A
 00000444  7C 20 20 20 20					BYTE	"|                             |",0ah
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   7C 0A
 00000464  7C 20 20 20 20					BYTE	"|                             |",0ah
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   7C 0A
 00000484  7C 20 20 20 20					BYTE	"|       O                     |",0ah
	   20 20 20 4F 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   7C 0A
 000004A4  7C 20 20 20 20					BYTE	"|                             |",0ah
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   7C 0A
 000004C4  7C 2D 2D 2D 2D					BYTE	"|-----------------------------|",0h
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   7C 00

 000004E4 20 20 20 20 20		room3		BYTE	"             ",186,"   ",186," /   /       ",0ah
	   20 20 20 20 20
	   20 20 20 BA 20
	   20 20 BA 20 2F
	   20 20 20 2F 20
	   20 20 20 20 20
	   20 0A
 00000504  20 20 20 20 20					BYTE	"             ",186,"   ",186,"/   /        ",0ah
	   20 20 20 20 20
	   20 20 20 BA 20
	   20 20 BA 2F 20
	   20 20 2F 20 20
	   20 20 20 20 20
	   20 0A
 00000524  20 20 20 20 20					BYTE	"             ",186,"       /         ",0ah
	   20 20 20 20 20
	   20 20 20 BA 20
	   20 20 20 20 20
	   20 2F 20 20 20
	   20 20 20 20 20
	   20 0A
 00000544  20 20 20 20 20					BYTE	"             ",186,"      /          ",0ah
	   20 20 20 20 20
	   20 20 20 BA 20
	   20 20 20 20 20
	   2F 20 20 20 20
	   20 20 20 20 20
	   20 0A
 00000564  20 20 20 20 20					BYTE	"             ",186,"     /           ",0ah
	   20 20 20 20 20
	   20 20 20 BA 20
	   20 20 20 20 2F
	   20 20 20 20 20
	   20 20 20 20 20
	   20 0A
 00000584  5F 5F 5F 5F 5F					BYTE	"_____________",186,"    /            ",0ah
	   5F 5F 5F 5F 5F
	   5F 5F 5F BA 20
	   20 20 20 2F 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 0A
 000005A4  20 20 20 20 20					BYTE	"                 ",186,"             ",0ah
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 BA 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 0A
 000005C4  5F 5F 5F 5F 5F					BYTE	"_____________    ",186,"             ",0ah
	   5F 5F 5F 5F 5F
	   5F 5F 5F 20 20
	   20 20 BA 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 0A
 000005E4  20 20 20 20 20					BYTE	"             ",186,"   ",186,"             ",0ah
	   20 20 20 20 20
	   20 20 20 BA 20
	   20 20 BA 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 0A
 00000604  20 20 20 20 20					BYTE	"             ",186,"   ",186,"             ",0ah
	   20 20 20 20 20
	   20 20 20 BA 20
	   20 20 BA 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 0A
 00000624  20 20 20 20 20					BYTE	"             ",186,"   ",186,"             ",0ah
	   20 20 20 20 20
	   20 20 20 BA 20
	   20 20 BA 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 0A
 00000644  20 20 20 20 20					BYTE	"             ",186,"   ",186,"             ",0ah
	   20 20 20 20 20
	   20 20 20 BA 20
	   20 20 BA 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 0A
 00000664  20 20 20 20 20					BYTE	"             ",186," O ",186,"             ",0h
	   20 20 20 20 20
	   20 20 20 BA 20
	   4F 20 BA 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 00

 00000684 7C 2D 2D 2D 2D		room4		BYTE	"|-----------------------------|",0ah
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   7C 0A
 000006A4  7C 20 20 20 20					BYTE	"|                             |",0ah
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   7C 0A
 000006C4  7C 20 20 20 20					BYTE	"|                             |",0ah
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   7C 0A
 000006E4  7C 20 20 20 20					BYTE	"|                             |",0ah
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   7C 0A
 00000704  7C 20 20 20 20					BYTE	"|                             |",0ah
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   7C 0A
 00000724  7C 20 20 20 20					BYTE	"|                             |",0ah
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   7C 0A
 00000744  7C 20 20 20 20					BYTE	"|                             |",0ah
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   7C 0A
 00000764  7C 20 20 20 20					BYTE	"|                             |",0ah
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   7C 0A
 00000784  7C 20 20 20 20					BYTE	"|                             |",0ah
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   7C 0A
 000007A4  7C 20 20 20 20					BYTE	"|                             |",0ah
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   7C 0A
 000007C4  7C 20 20 20 20					BYTE	"|                             |",0ah
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   7C 0A
 000007E4  7C 20 20 20 20					BYTE	"|                 O           |",0ah
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 4F 20
	   20 20 20 20 20
	   20 20 20 20 20
	   7C 0A
 00000804  7C 2D 2D 2D 2D					BYTE	"|-----------------------------|",0h
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   7C 00

 00000000			.code

 00000000			changeToR4 PROC

 00000000  E8 00000000 E		call Clrscr
 00000005  BA 00000684 R		mov edx, offset room4

 0000000A  BE 00000684 R		mov esi, offset room4
 0000000F  BF 00000002 R		mov edi, offset currentRoom
 00000014  B9 000001A0			mov ecx, 416
 00000019  F3/ A4			rep movsb

 0000001B  E8 00000000 E		call WriteString
					
 00000020  C6 05 00000000 R		mov playerPosX, 18
	   12
 00000027  C6 05 00000001 R		mov playerPosY, 11
	   0B
 0000002E  C6 05 000001A2 R		mov deltax, 0		
	   00
 00000035  C6 05 000001A3 R		mov deltay, 0		
	   00

 0000003C  C3				ret
 0000003D			changeToR4 ENDP

 0000003D			changeToR3 PROC

 0000003D  E8 00000000 E		call Clrscr
 00000042  BA 000004E4 R		mov edx, offset room3

 00000047  BE 000004E4 R		mov esi, offset room3
 0000004C  BF 00000002 R		mov edi, offset currentRoom
 00000051  B9 000001A0			mov ecx, 416
 00000056  F3/ A4			rep movsb

 00000058  E8 00000000 E		call WriteString
					
 0000005D  C6 05 00000000 R		mov playerPosX, 15
	   0F
 00000064  C6 05 00000001 R		mov playerPosY, 12
	   0C
 0000006B  C6 05 000001A2 R		mov deltax, 0		
	   00
 00000072  C6 05 000001A3 R		mov deltay, 0		
	   00

 00000079  C3				ret
 0000007A			changeToR3 ENDP

 0000007A			changeToR2 PROC

 0000007A  E8 00000000 E		call Clrscr 
 0000007F  BA 00000344 R		mov edx, offset room2

 00000084  BE 00000344 R		mov esi, offset room2
 00000089  BF 00000002 R		mov edi, offset currentRoom
 0000008E  B9 000001A0			mov ecx, 416
 00000093  F3/ A4			rep movsb

 00000095  E8 00000000 E		call WriteString
					
 0000009A  C6 05 00000000 R		mov playerPosX, 8
	   08
 000000A1  C6 05 00000001 R		mov playerPosY, 10
	   0A
 000000A8  C6 05 000001A2 R		mov deltax, 0		
	   00
 000000AF  C6 05 000001A3 R		mov deltay, 0		
	   00

 000000B6  C3				ret
 000000B7			changeToR2 ENDP

 000000B7			changeToStart PROC

 000000B7  E8 00000000 E		call Clrscr
 000000BC  BA 000001A4 R		mov edx, offset startRoom

 000000C1  BE 000001A4 R		mov esi, offset startRoom
 000000C6  BF 00000002 R		mov edi, offset currentRoom
 000000CB  B9 000001A0			mov ecx, 416
 000000D0  F3/ A4			rep movsb

 000000D2  E8 00000000 E		call WriteString
					
 000000D7  C6 05 00000000 R		mov playerPosX, 18
	   12
 000000DE  C6 05 00000001 R		mov playerPosY, 11
	   0B
 000000E5  C6 05 000001A2 R		mov deltax, 0		
	   00
 000000EC  C6 05 000001A3 R		mov deltay, 0		
	   00

 000000F3  C3				ret
 000000F4			changeToStart ENDP

 000000F4			movePlayer PROC

					; eax = (deltay+posY) * 40
					;-------------------;
 000000F4  A0 00000001 R		mov al, playerPosY	;
 000000F9  02 05 000001A3 R		add al, deltay		;
										;
 000000FF  0F B6 C0			movzx eax, al		;
 00000102  03 C0			add eax, eax		;
 00000104  03 C0			add eax, eax		;
 00000106  03 C0			add eax, eax		;
 00000108  03 C0			add eax, eax		;
 0000010A  03 C0			add eax, eax		;
					;-------------------;

 0000010C  8A 3D 000001A2 R		mov bh, deltax
 00000112  02 3D 00000000 R		add bh, playerPosX	

 00000118  0F B6 DF			movzx ebx, bh
 0000011B  03 D8			add ebx, eax


					;.if currentRoom[ebx] != 32
					;	mov deltax, 0
					;	mov deltay, 0
					;	ret
					;.elseif currentRoom[ebx] != 79 
					;	mov deltax, 0
					;	mov deltay, 0
					;	ret
					.if currentRoom[ebx] == 32 || currentRoom[ebx] == 79
 0000011D  80 BB 00000002 R
	   20		   *	    cmp    currentRoom + [ebx], 020h
 00000124  74 09	   *	    je	@C0002
 00000126  80 BB 00000002 R
	   4F		   *	    cmp    currentRoom + [ebx], 04Fh
 0000012D  75 61	   *	    jne    @C0001
 0000012F		   *@C0002:
 0000012F  8A 35 00000001 R			mov dh, playerPosY
 00000135  8A 15 00000000 R			mov dl, playerPosX
 0000013B  E8 00000000 E			call Gotoxy
 00000140  B0 20				mov al, " "
 00000142  E8 00000000 E			call WriteChar 

 00000147  8A 3D 000001A2 R			mov bh, deltax
 0000014D  8A 1D 000001A3 R			mov bl, deltay

 00000153  00 3D 00000000 R			add playerPosX, bh
 00000159  00 1D 00000001 R			add playerPosY, bl
 0000015F  8A 35 00000001 R			mov dh, playerPosY
 00000165  8A 15 00000000 R			mov dl, playerPosX
 0000016B  E8 00000000 E			call Gotoxy
 00000170  B0 4F				mov al, "O"
 00000172  E8 00000000 E			call WriteChar

 00000177  C6 05 000001A2 R			mov deltax, 0
	   00
 0000017E  C6 05 000001A3 R			mov deltay, 0
	   00

 00000185  B6 00				mov dh, 0
 00000187  B2 00				mov dl, 0
 00000189  E8 00000000 E			call Gotoxy
					.else
 0000018E  EB 0E	   *	    jmp    @C0004
 00000190		   *@C0001:
 00000190  C6 05 000001A2 R			mov deltax, 0
	   00
 00000197  C6 05 000001A3 R			mov deltay, 0
	   00
					.endif
 0000019E		   *@C0004:
					
 0000019E  C3				ret
 0000019F			movePlayer ENDP

 0000019F			update PROC
					
 0000019F  E8 00000000 E		call ReadChar
					.if AL == 97
 000001A4  3C 61	   *	    cmp    al, 061h
 000001A6  75 09	   *	    jne    @C0005
 000001A8  C6 05 000001A2 R			mov deltax, -1
	   FF
					.elseif AL == 100
 000001AF  EB 51	   *	    jmp    @C0007
 000001B1		   *@C0005:
 000001B1  3C 64	   *	    cmp    al, 064h
 000001B3  75 09	   *	    jne    @C0008
 000001B5  C6 05 000001A2 R			mov deltax, 1
	   01
					.elseif AL == 115
 000001BC  EB 44	   *	    jmp    @C000A
 000001BE		   *@C0008:
 000001BE  3C 73	   *	    cmp    al, 073h
 000001C0  75 09	   *	    jne    @C000B
 000001C2  C6 05 000001A3 R			mov deltay, 1
	   01
					.elseif AL == 119
 000001C9  EB 37	   *	    jmp    @C000D
 000001CB		   *@C000B:
 000001CB  3C 77	   *	    cmp    al, 077h
 000001CD  75 09	   *	    jne    @C000E
 000001CF  C6 05 000001A3 R			mov deltay, -1
	   FF
					.elseif AL == 49
 000001D6  EB 2A	   *	    jmp    @C0010
 000001D8		   *@C000E:
 000001D8  3C 31	   *	    cmp    al, 031h
 000001DA  75 07	   *	    jne    @C0011
 000001DC  E8 FFFFFED6				call changeToStart
					.elseif AL == 50
 000001E1  EB 1F	   *	    jmp    @C0013
 000001E3		   *@C0011:
 000001E3  3C 32	   *	    cmp    al, 032h
 000001E5  75 07	   *	    jne    @C0014
 000001E7  E8 FFFFFE8E				call changeToR2
					.elseif AL == 51
 000001EC  EB 14	   *	    jmp    @C0016
 000001EE		   *@C0014:
 000001EE  3C 33	   *	    cmp    al, 033h
 000001F0  75 07	   *	    jne    @C0017
 000001F2  E8 FFFFFE46				call changeToR3
					.elseif AL == 52
 000001F7  EB 09	   *	    jmp    @C0019
 000001F9		   *@C0017:
 000001F9  3C 34	   *	    cmp    al, 034h
 000001FB  75 05	   *	    jne    @C001A
 000001FD  E8 FFFFFDFE				call changeToR4
					.endif
 00000202		   *@C001A:
 00000202		   *@C0019:
 00000202		   *@C0016:
 00000202		   *@C0013:
 00000202		   *@C0010:
 00000202		   *@C000D:
 00000202		   *@C000A:
 00000202		   *@C0007:

 00000202  E8 FFFFFEED			call movePlayer

 00000207  C3				ret
 00000208			update ENDP


 00000208			main PROC

 00000208  BA 000001A4 R		mov edx, offset startRoom

 0000020D  BE 000001A4 R		mov esi, offset startRoom
 00000212  BF 00000002 R		mov edi, offset currentRoom
 00000217  B9 000001A0			mov ecx, 416
 0000021C  F3/ A4			rep movsb

 0000021E  E8 00000000 E		call WriteString
 00000223  B9 00000CB7			mov ecx, 3255
					
 00000228			mainLoop:
 00000228  E8 FFFFFF72			call update
 0000022D  E2 F9			loop mainLoop

					exit
 0000022F  6A 00	   *	    push   +000000000h
 00000231  E8 00000000 E   *	    call   ExitProcess
 00000236			main ENDP
				END main
Microsoft (R) Macro Assembler Version 14.11.25547.0	    11/19/17 21:41:33
-Add and Subtract              (AddSubAlt.asm		     Symbols 2 - 1




Structures and Unions:

                N a m e                  Size
                                         Offset      Type

CONSOLE_CURSOR_INFO  . . . . . .	 00000008
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  bVisible . . . . . . . . . . .	 00000004	 DWord
CONSOLE_SCREEN_BUFFER_INFO . . .	 00000016
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCursorPosition . . . . . . .	 00000004	 DWord
  wAttributes  . . . . . . . . .	 00000008	 Word
  srWindow . . . . . . . . . . .	 0000000A	 QWord
  dwMaximumWindowSize  . . . . .	 00000012	 DWord
COORD  . . . . . . . . . . . . .	 00000004
  X  . . . . . . . . . . . . . .	 00000000	 Word
  Y  . . . . . . . . . . . . . .	 00000002	 Word
FILETIME . . . . . . . . . . . .	 00000008
  loDateTime . . . . . . . . . .	 00000000	 DWord
  hiDateTime . . . . . . . . . .	 00000004	 DWord
FOCUS_EVENT_RECORD . . . . . . .	 00000004
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
FPU_ENVIRON  . . . . . . . . . .	 0000001C
  controlWord  . . . . . . . . .	 00000000	 Word
  statusWord . . . . . . . . . .	 00000004	 Word
  tagWord  . . . . . . . . . . .	 00000008	 Word
  instrPointerOffset . . . . . .	 0000000C	 DWord
  instrPointerSelector . . . . .	 00000010	 DWord
  operandPointerOffset . . . . .	 00000014	 DWord
  operandPointerSelector . . . .	 00000018	 Word
INPUT_RECORD . . . . . . . . . .	 00000014
  EventType  . . . . . . . . . .	 00000000	 Word
  Event  . . . . . . . . . . . .	 00000004	 XmmWord
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCommandId  . . . . . . . . .	 00000000	 DWord
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
KEY_EVENT_RECORD . . . . . . . .	 00000010
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
MENU_EVENT_RECORD  . . . . . . .	 00000004
  dwCommandId  . . . . . . . . .	 00000000	 DWord
MOUSE_EVENT_RECORD . . . . . . .	 00000010
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
SMALL_RECT . . . . . . . . . . .	 00000008
  Left . . . . . . . . . . . . .	 00000000	 Word
  Top  . . . . . . . . . . . . .	 00000002	 Word
  Right  . . . . . . . . . . . .	 00000004	 Word
  Bottom . . . . . . . . . . . .	 00000006	 Word
SYSTEMTIME . . . . . . . . . . .	 00000010
  wYear  . . . . . . . . . . . .	 00000000	 Word
  wMonth . . . . . . . . . . . .	 00000002	 Word
  wDayOfWeek . . . . . . . . . .	 00000004	 Word
  wDay . . . . . . . . . . . . .	 00000006	 Word
  wHour  . . . . . . . . . . . .	 00000008	 Word
  wMinute  . . . . . . . . . . .	 0000000A	 Word
  wSecond  . . . . . . . . . . .	 0000000C	 Word
  wMilliseconds  . . . . . . . .	 0000000E	 Word
WINDOW_BUFFER_SIZE_RECORD  . . .	 00000004
  dwSize . . . . . . . . . . . .	 00000000	 DWord


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 Para	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 00000824 Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 00000236 Para	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

CloseFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CloseHandle  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Clrscr . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateFileA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateOutputFile . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Crlf . . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Delay  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpMem  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpRegs . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToDosDateTime  . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToSystemTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FlushConsoleInputBuffer  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FormatMessageA . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandLineA  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandTail . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCP . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleScreenBufferInfo . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetDateTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetFileTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetKeyState  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLastError . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMaxXY . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMseconds  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetNumberOfConsoleInputEvents  .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetProcessHeap . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetStdHandle . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetSystemTime  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTickCount . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Gotoxy . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapAlloc  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapCreate . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapDestroy  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapFree . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapSize . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
IsDigit  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
LocalFree  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MessageBoxA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBoxAsk  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBox . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
OpenInputFile  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseDecimal32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseInteger32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
PeekConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Random32 . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
RandomRange  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Randomize  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadChar . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleA . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadDec  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFile . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFloat  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFromFile . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadHex  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadInt  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKeyFlush . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKey  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadString . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorPosition . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleScreenBufferSize . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTextAttribute  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTitleA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleWindowInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetFilePointer . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ShowFPUStack . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Sleep  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
StrLength  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_compare  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_copy . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_length . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_trim . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_ucase  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SystemTimeToFileTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WaitMsg  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBinB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBin . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteChar  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleA  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputAttribute  . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputCharacterA . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteDec . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFloat . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHexB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHex . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteInt . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrameName  . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrame  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteString  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteToFile  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteWindowsMsg  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
changeToR2 . . . . . . . . . . .	P Near	 0000007A _TEXT	Length= 0000003D Public STDCALL
changeToR3 . . . . . . . . . . .	P Near	 0000003D _TEXT	Length= 0000003D Public STDCALL
changeToR4 . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 0000003D Public STDCALL
changeToStart  . . . . . . . . .	P Near	 000000B7 _TEXT	Length= 0000003D Public STDCALL
main . . . . . . . . . . . . . .	P Near	 00000208 _TEXT	Length= 0000002E Public STDCALL
  mainLoop . . . . . . . . . . .	L Near	 00000228 _TEXT	
movePlayer . . . . . . . . . . .	P Near	 000000F4 _TEXT	Length= 000000AB Public STDCALL
printf . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
scanf  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
update . . . . . . . . . . . . .	P Near	 0000019F _TEXT	Length= 00000069 Public STDCALL
wsprintfA  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
ALT_MASK . . . . . . . . . . . .	Number	 00000003h   
CAPSLOCK_ON  . . . . . . . . . .	Number	 00000080h   
CREATE_ALWAYS  . . . . . . . . .	Number	 00000002h   
CREATE_NEW . . . . . . . . . . .	Number	 00000001h   
CTRL_MASK  . . . . . . . . . . .	Number	 0000000Ch   
CreateFile . . . . . . . . . . .	Text   	 CreateFileA
DO_NOT_SHARE . . . . . . . . . .	Number	 00000000h   
ENABLE_ECHO_INPUT  . . . . . . .	Number	 00000004h   
ENABLE_LINE_INPUT  . . . . . . .	Number	 00000002h   
ENABLE_MOUSE_INPUT . . . . . . .	Number	 00000010h   
ENABLE_PROCESSED_INPUT . . . . .	Number	 00000001h   
ENABLE_PROCESSED_OUTPUT  . . . .	Number	 00000001h   
ENABLE_WINDOW_INPUT  . . . . . .	Number	 00000008h   
ENABLE_WRAP_AT_EOL_OUTPUT  . . .	Number	 00000002h   
ENHANCED_KEY . . . . . . . . . .	Number	 00000100h   
FALSE  . . . . . . . . . . . . .	Number	 00000000h   
FILE_APPEND_DATA . . . . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_ARCHIVE . . . . .	Number	 00000020h   
FILE_ATTRIBUTE_COMPRESSED  . . .	Number	 00000800h   
FILE_ATTRIBUTE_DEVICE  . . . . .	Number	 00000040h   
FILE_ATTRIBUTE_DIRECTORY . . . .	Number	 00000010h   
FILE_ATTRIBUTE_ENCRYPTED . . . .	Number	 00004000h   
FILE_ATTRIBUTE_HIDDEN  . . . . .	Number	 00000002h   
FILE_ATTRIBUTE_NORMAL  . . . . .	Number	 00000080h   
FILE_ATTRIBUTE_NOT_CONTENT_INDEXED .	Number	 00002000h   
FILE_ATTRIBUTE_OFFLINE . . . . .	Number	 00001000h   
FILE_ATTRIBUTE_READONLY  . . . .	Number	 00000001h   
FILE_ATTRIBUTE_REPARSE_POINT . .	Number	 00000400h   
FILE_ATTRIBUTE_SPARSE_FILE . . .	Number	 00000200h   
FILE_ATTRIBUTE_SYSTEM  . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_TEMPORARY . . . .	Number	 00000100h   
FILE_BEGIN . . . . . . . . . . .	Number	 00000000h   
FILE_CURRENT . . . . . . . . . .	Number	 00000001h   
FILE_DELETE_CHILD  . . . . . . .	Number	 00000040h   
FILE_END . . . . . . . . . . . .	Number	 00000002h   
FILE_READ_DATA . . . . . . . . .	Number	 00000001h   
FILE_SHARE_DELETE  . . . . . . .	Number	 00000004h   
FILE_SHARE_READ  . . . . . . . .	Number	 00000001h   
FILE_SHARE_WRITE . . . . . . . .	Number	 00000002h   
FILE_WRITE_DATA  . . . . . . . .	Number	 00000002h   
FOCUS_EVENT  . . . . . . . . . .	Number	 00000010h   
FORMAT_MESSAGE_ALLOCATE_BUFFER .	Number	 00000100h   
FORMAT_MESSAGE_FROM_SYSTEM . . .	Number	 00001000h   
FormatMessage  . . . . . . . . .	Text   	 FormatMessageA
GENERIC_ALL  . . . . . . . . . .	Number	 10000000h   
GENERIC_EXECUTE  . . . . . . . .	Number	 20000000h   
GENERIC_READ . . . . . . . . . .	Number	 -80000000h   
GENERIC_WRITE  . . . . . . . . .	Number	 40000000h   
GetCommandLine . . . . . . . . .	Text   	 GetCommandLineA
HANDLE . . . . . . . . . . . . .	Text   	 DWORD
HEAP_GENERATE_EXCEPTIONS . . . .	Number	 00000004h   
HEAP_GROWABLE  . . . . . . . . .	Number	 00000002h   
HEAP_NO_SERIALIZE  . . . . . . .	Number	 00000001h   
HEAP_REALLOC_IN_PLACE_ONLY . . .	Number	 00000010h   
HEAP_ZERO_MEMORY . . . . . . . .	Number	 00000008h   
IDABORT  . . . . . . . . . . . .	Number	 00000003h   
IDCANCEL . . . . . . . . . . . .	Number	 00000002h   
IDCLOSE  . . . . . . . . . . . .	Number	 00000008h   
IDCONTINUE . . . . . . . . . . .	Number	 0000000Bh   
IDHELP . . . . . . . . . . . . .	Number	 00000009h   
IDIGNORE . . . . . . . . . . . .	Number	 00000005h   
IDNO . . . . . . . . . . . . . .	Number	 00000007h   
IDOK . . . . . . . . . . . . . .	Number	 00000001h   
IDRETRY  . . . . . . . . . . . .	Number	 00000004h   
IDTIMEOUT  . . . . . . . . . . .	Number	 00007D00h   
IDTRYAGAIN . . . . . . . . . . .	Number	 0000000Ah   
IDYES  . . . . . . . . . . . . .	Number	 00000006h   
INVALID_HANDLE_VALUE . . . . . .	Number	 -00000001h   
KBDOWN_FLAG  . . . . . . . . . .	Number	 00000001h   
KEY_EVENT  . . . . . . . . . . .	Number	 00000001h   
KEY_MASKS  . . . . . . . . . . .	Number	 0000001Fh   
LEFT_ALT_PRESSED . . . . . . . .	Number	 00000002h   
LEFT_CTRL_PRESSED  . . . . . . .	Number	 00000008h   
MB_ABORTRETRYIGNORE  . . . . . .	Number	 00000002h   
MB_APPLMODAL . . . . . . . . . .	Number	 00000000h   
MB_CANCELTRYCONTINUE . . . . . .	Number	 00000006h   
MB_DEFBUTTON1  . . . . . . . . .	Number	 00000000h   
MB_DEFBUTTON2  . . . . . . . . .	Number	 00000100h   
MB_DEFBUTTON3  . . . . . . . . .	Number	 00000200h   
MB_DEFBUTTON4  . . . . . . . . .	Number	 00000300h   
MB_HELP  . . . . . . . . . . . .	Number	 00004000h   
MB_ICONASTERISK  . . . . . . . .	Number	 00000040h   
MB_ICONERROR . . . . . . . . . .	Number	 00000010h   
MB_ICONEXCLAMATION . . . . . . .	Number	 00000030h   
MB_ICONHAND  . . . . . . . . . .	Number	 00000010h   
MB_ICONINFORMATION . . . . . . .	Number	 00000040h   
MB_ICONQUESTION  . . . . . . . .	Number	 00000020h   
MB_ICONSTOP  . . . . . . . . . .	Number	 00000010h   
MB_ICONWARNING . . . . . . . . .	Number	 00000030h   
MB_OKCANCEL  . . . . . . . . . .	Number	 00000001h   
MB_OK  . . . . . . . . . . . . .	Number	 00000000h   
MB_RETRYCANCEL . . . . . . . . .	Number	 00000005h   
MB_SYSTEMMODAL . . . . . . . . .	Number	 00001000h   
MB_TASKMODAL . . . . . . . . . .	Number	 00002000h   
MB_USERICON  . . . . . . . . . .	Number	 00000080h   
MB_YESNOCANCEL . . . . . . . . .	Number	 00000003h   
MB_YESNO . . . . . . . . . . . .	Number	 00000004h   
MENU_EVENT . . . . . . . . . . .	Number	 00000008h   
MOUSE_EVENT  . . . . . . . . . .	Number	 00000002h   
MessageBox . . . . . . . . . . .	Text   	 MessageBoxA
NULL . . . . . . . . . . . . . .	Number	 00000000h   
NUMLOCK_ON . . . . . . . . . . .	Number	 00000020h   
OPEN_ALWAYS  . . . . . . . . . .	Number	 00000004h   
OPEN_EXISTING  . . . . . . . . .	Number	 00000003h   
PeekConsoleInput . . . . . . . .	Text   	 PeekConsoleInputA
RIGHT_ALT_PRESSED  . . . . . . .	Number	 00000001h   
RIGHT_CTRL_PRESSED . . . . . . .	Number	 00000004h   
ReadConsoleInput . . . . . . . .	Text   	 ReadConsoleInputA
ReadConsole  . . . . . . . . . .	Text   	 ReadConsoleA
SCROLLLOCK_ON  . . . . . . . . .	Number	 00000040h   
SHIFT_MASK . . . . . . . . . . .	Number	 00000010h   
SHIFT_PRESSED  . . . . . . . . .	Number	 00000010h   
STD_ERROR_HANDLE . . . . . . . .	Number	 -0000000Ch   
STD_INPUT_HANDLE . . . . . . . .	Number	 -0000000Ah   
STD_OUTPUT_HANDLE  . . . . . . .	Number	 -0000000Bh   
SetConsoleTitle  . . . . . . . .	Text   	 SetConsoleTitleA
TAB  . . . . . . . . . . . . . .	Number	 00000009h   
TRUE . . . . . . . . . . . . . .	Number	 00000001h   
TRUNCATE_EXISTING  . . . . . . .	Number	 00000005h   
VK_11  . . . . . . . . . . . . .	Number	 000000BDh   
VK_12  . . . . . . . . . . . . .	Number	 000000BBh   
VK_ADD . . . . . . . . . . . . .	Number	 0000006Bh   
VK_BACK  . . . . . . . . . . . .	Number	 00000008h   
VK_CANCEL  . . . . . . . . . . .	Number	 00000003h   
VK_CAPITAL . . . . . . . . . . .	Number	 00000014h   
VK_CLEAR . . . . . . . . . . . .	Number	 0000000Ch   
VK_CONTROL . . . . . . . . . . .	Number	 00000011h   
VK_DECIMAL . . . . . . . . . . .	Number	 0000006Eh   
VK_DELETE  . . . . . . . . . . .	Number	 0000002Eh   
VK_DIVIDE  . . . . . . . . . . .	Number	 0000006Fh   
VK_DOWN  . . . . . . . . . . . .	Number	 00000028h   
VK_END . . . . . . . . . . . . .	Number	 00000023h   
VK_ESCAPE  . . . . . . . . . . .	Number	 0000001Bh   
VK_EXECUTE . . . . . . . . . . .	Number	 0000002Bh   
VK_F10 . . . . . . . . . . . . .	Number	 00000079h   
VK_F11 . . . . . . . . . . . . .	Number	 0000007Ah   
VK_F12 . . . . . . . . . . . . .	Number	 0000007Bh   
VK_F13 . . . . . . . . . . . . .	Number	 0000007Ch   
VK_F14 . . . . . . . . . . . . .	Number	 0000007Dh   
VK_F15 . . . . . . . . . . . . .	Number	 0000007Eh   
VK_F16 . . . . . . . . . . . . .	Number	 0000007Fh   
VK_F17 . . . . . . . . . . . . .	Number	 00000080h   
VK_F18 . . . . . . . . . . . . .	Number	 00000081h   
VK_F19 . . . . . . . . . . . . .	Number	 00000082h   
VK_F1  . . . . . . . . . . . . .	Number	 00000070h   
VK_F20 . . . . . . . . . . . . .	Number	 00000083h   
VK_F21 . . . . . . . . . . . . .	Number	 00000084h   
VK_F22 . . . . . . . . . . . . .	Number	 00000085h   
VK_F23 . . . . . . . . . . . . .	Number	 00000086h   
VK_F24 . . . . . . . . . . . . .	Number	 00000087h   
VK_F2  . . . . . . . . . . . . .	Number	 00000071h   
VK_F3  . . . . . . . . . . . . .	Number	 00000072h   
VK_F4  . . . . . . . . . . . . .	Number	 00000073h   
VK_F5  . . . . . . . . . . . . .	Number	 00000074h   
VK_F6  . . . . . . . . . . . . .	Number	 00000075h   
VK_F7  . . . . . . . . . . . . .	Number	 00000076h   
VK_F8  . . . . . . . . . . . . .	Number	 00000077h   
VK_F9  . . . . . . . . . . . . .	Number	 00000078h   
VK_HELP  . . . . . . . . . . . .	Number	 0000002Fh   
VK_HOME  . . . . . . . . . . . .	Number	 00000024h   
VK_INSERT  . . . . . . . . . . .	Number	 0000002Dh   
VK_LBUTTON . . . . . . . . . . .	Number	 00000001h   
VK_LCONTROL  . . . . . . . . . .	Number	 000000A2h   
VK_LEFT  . . . . . . . . . . . .	Number	 00000025h   
VK_LMENU . . . . . . . . . . . .	Number	 000000A4h   
VK_LSHIFT  . . . . . . . . . . .	Number	 000000A0h   
VK_MENU  . . . . . . . . . . . .	Number	 00000012h   
VK_MULTIPLY  . . . . . . . . . .	Number	 0000006Ah   
VK_NEXT  . . . . . . . . . . . .	Number	 00000022h   
VK_NUMLOCK . . . . . . . . . . .	Number	 00000090h   
VK_NUMPAD0 . . . . . . . . . . .	Number	 00000060h   
VK_NUMPAD1 . . . . . . . . . . .	Number	 00000061h   
VK_NUMPAD2 . . . . . . . . . . .	Number	 00000062h   
VK_NUMPAD3 . . . . . . . . . . .	Number	 00000063h   
VK_NUMPAD4 . . . . . . . . . . .	Number	 00000064h   
VK_NUMPAD5 . . . . . . . . . . .	Number	 00000065h   
VK_NUMPAD6 . . . . . . . . . . .	Number	 00000066h   
VK_NUMPAD7 . . . . . . . . . . .	Number	 00000067h   
VK_NUMPAD8 . . . . . . . . . . .	Number	 00000068h   
VK_NUMPAD9 . . . . . . . . . . .	Number	 00000069h   
VK_PAUSE . . . . . . . . . . . .	Number	 00000013h   
VK_PRINT . . . . . . . . . . . .	Number	 0000002Ah   
VK_PRIOR . . . . . . . . . . . .	Number	 00000021h   
VK_RBUTTON . . . . . . . . . . .	Number	 00000002h   
VK_RCONTROL  . . . . . . . . . .	Number	 000000A3h   
VK_RETURN  . . . . . . . . . . .	Number	 0000000Dh   
VK_RIGHT . . . . . . . . . . . .	Number	 00000027h   
VK_RMENU . . . . . . . . . . . .	Number	 000000A5h   
VK_RSHIFT  . . . . . . . . . . .	Number	 000000A1h   
VK_SCROLL  . . . . . . . . . . .	Number	 00000091h   
VK_SEPARATER . . . . . . . . . .	Number	 0000006Ch   
VK_SHIFT . . . . . . . . . . . .	Number	 00000010h   
VK_SNAPSHOT  . . . . . . . . . .	Number	 0000002Ch   
VK_SPACE . . . . . . . . . . . .	Number	 00000020h   
VK_SUBTRACT  . . . . . . . . . .	Number	 0000006Dh   
VK_TAB . . . . . . . . . . . . .	Number	 00000009h   
VK_UP  . . . . . . . . . . . . .	Number	 00000026h   
WINDOW_BUFFER_SIZE_EVENT . . . .	Number	 00000004h   
WriteConsoleOutputCharacter  . .	Text   	 WriteConsoleOutputCharacterA
WriteConsole . . . . . . . . . .	Text   	 WriteConsoleA
black  . . . . . . . . . . . . .	Number	 00000000h   
blue . . . . . . . . . . . . . .	Number	 00000001h   
brown  . . . . . . . . . . . . .	Number	 00000006h   
currentRoom  . . . . . . . . . .	Byte	 00000002 _DATA	
cyan . . . . . . . . . . . . . .	Number	 00000003h   
deltax . . . . . . . . . . . . .	Byte	 000001A2 _DATA	
deltay . . . . . . . . . . . . .	Byte	 000001A3 _DATA	
exit . . . . . . . . . . . . . .	Text   	 INVOKE ExitProcess,0
gray . . . . . . . . . . . . . .	Number	 00000008h   
green  . . . . . . . . . . . . .	Number	 00000002h   
lightBlue  . . . . . . . . . . .	Number	 00000009h   
lightCyan  . . . . . . . . . . .	Number	 0000000Bh   
lightGray  . . . . . . . . . . .	Number	 00000007h   
lightGreen . . . . . . . . . . .	Number	 0000000Ah   
lightMagenta . . . . . . . . . .	Number	 0000000Dh   
lightRed . . . . . . . . . . . .	Number	 0000000Ch   
magenta  . . . . . . . . . . . .	Number	 00000005h   
playerPosX . . . . . . . . . . .	Byte	 00000000 _DATA	
playerPosY . . . . . . . . . . .	Byte	 00000001 _DATA	
red  . . . . . . . . . . . . . .	Number	 00000004h   
room2  . . . . . . . . . . . . .	Byte	 00000344 _DATA	
room3  . . . . . . . . . . . . .	Byte	 000004E4 _DATA	
room4  . . . . . . . . . . . . .	Byte	 00000684 _DATA	
startRoom  . . . . . . . . . . .	Byte	 000001A4 _DATA	
white  . . . . . . . . . . . . .	Number	 0000000Fh   
wsprintf . . . . . . . . . . . .	Text   	 wsprintfA
yellow . . . . . . . . . . . . .	Number	 0000000Eh   

	   0 Warnings
	   0 Errors
